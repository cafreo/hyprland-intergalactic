#set previewer ~/.config/lf/lf_kitty_preview
#set cleaner ~/.config/lf/lf_kitty_clean

# PREVIEW
set previewer ctpv
set cleaner ctpvclear
&ctpv -s $id
&ctpvquit $id

# SET SORT MODE FOR SPECIFIC DIRECTORIES
cmd on-cd &{{
	# set title of window
	printf "\033]0; lf - $PWD\007" > /dev/tty

	# load git infos 
	source /usr/share/git/completion/git-prompt.sh
    GIT_PS1_SHOWDIRTYSTATE=auto
    GIT_PS1_SHOWSTASHSTATE=auto
    GIT_PS1_SHOWUNTRACKEDFILES=auto
    GIT_PS1_SHOWUPSTREAM=auto
    GIT_PS1_COMPRESSSPARSESTATE=auto
    git=$(__git_ps1 "  %s") || true
    fmt="\033[32;1m%u@%h\033[0m:\033[34;1m%w\033[0m\033[33;1m$git\033[0m"
    lf -remote "send $id set promptfmt \"$fmt\""

	# sorting
    case "$PWD" in
        ~/Pictures/Screenshots | ~/Pictures/Andere\ Bilder/Personen | ~/Downloads | ~/Flow | ~/Documents/Scan | ~/Projects/Fonts | /mnt/CA-POTRO-EXT-HDD/Music)
            lf -remote "send $id set user_prev_sortby $lf_sortby"
            lf -remote "send $id set info time"
            lf -remote "send $id set sortby time"
            lf -remote "send $id set reverse"

            lf -remote "send $id echomsg 󱕇   changed sort to time"
            lf -remote "send top"
            ;;
        *)
            # restore sorting on directory exit
            if [[ "$lf_user_prev_sortby" != "" ]]; then
                lf -remote "send $id set sortby $lf_user_prev_sortby"
                lf -remote "send $id set noreverse"

                lf -remote "send $id echomsg 󰦛   restored sort to $lf_user_prev_sortby"
                lf -remote "send $id set user_prev_sortby ''"
                #lf -remote "send top"
            fi
            ;;
    esac
}}

# run on startup too
on-cd

# OPEN

#cmd open &xdg-open $f

# ECHO PROGRESS ON FILE TRANSFER

cmd paste $cp-p --lf-paste $id

cmd paste-alt &{{
    set -- $(cat ~/.local/share/lf/files)
    mode="$1"
    shift
    case "$mode" in
        copy)
            rsync -av --ignore-existing --progress -- "$@" . |
            stdbuf -i0 -o0 -e0 tr '\r' '\n' |
            while IFS= read -r line; do
                lf -remote "send $id echo $line"
            done
            ;;
        move) mv -n -- "$@" .;;
    esac
    rm ~/.local/share/lf/files
    lf -remote "send clear"
}}

# COPY FILE NAME

cmd cpfilename ${{
	file=${f##*/}
	name=${file%.*}
	printf $name | wl-copy
}}

# BULK RENAME FILES IN EDITOR

cmd bulk-rename ${{

    renamer -p $(basename -a -- $fx)

    lf -remote "send $id load"
    lf -remote "send $id unselect"

}}

cmd undo-bulk-rename ${{
	renamer -u

	lf -remote "send $id load"
    lf -remote "send $id unselect"
}}

# FUZZY FIND
cmd fzf_jump ${{
  #lf -remote "send cd ~/"
  res="$(fd --hidden --ignore-case . '/' | fzf --border --header='  jump to location')"
  if [ -f "$res" ]; then
    cmd="select"
  elif [ -d "$res" ]; then
    cmd="cd"
  fi
  lf -remote "send $id $cmd \"$res\""
}}


# TRASH SELECTED ITEMS

cmd trash %{{
    printf "   move $fx to trash bin? [y/n] " $fx
    read -r ans
    if [ "$ans" = "y" ]; then
        trash-put $fx
        echo "  moved to trash bin successfully"
    else
        echo "  aborted"
    fi
}}

#cmd trash %trash-put $fx

# CREATE DIRECTORIES & FILES
cmd mkdir %{{
    printf " 󰉗  create new directory: "
    read ans
    mkdir $ans
}}

cmd mkfile %{{
    printf " 󰝒  create new file: "
    read ans
    touch $ans
}}

# CHANGE

cmd chown %{{
  #printf "   new owner: "
  #read ans

  for file in "$fx"
  do
    chown $USER $file
  done

  lf -remote 'send :reload;unselect'
}}

cmd chmod %{{
  printf " 󰦝  new permissions: "
  read ans

  for file in "$fx"
  do
    chmod $ans $file
  done

  lf -remote 'send :reload;unselect'
}}

# ARCHIVES

cmd zip %zip -r "$f" "$f"
cmd zipe $zip -re "$f" "$f"

#cmd tar %tar cvf "$f.tar" "$f"
#cmd targz %tar cvzf "$f.tar.gz" "$f"
#cmd tarbz2 %tar cjvf "$f.tar.bz2" "$f"

cmd unarchive ${{
  case "$f" in
      *.zip) unzip "$f" -d "${f%.zip}" ;;
      *.7z) 7za e "$f" -o"${f%.7z}" ;;
      *.tar.gz) tar -xzvf "$f" ;;
      *.tar.xz) tar -xvf "$f" ;;
      *.tar.bz2) tar -xjvf "$f" ;;
      *.tar) tar -xvf "$f" ;;
      *) echo "Unsupported format" ;;
  esac
}}

# CONVERT FILES

cmd convertmp4 ${{
	ffmpeg -i $fx -c:v libx264 -pix_fmt yuv420p -b:v 12M -b:a 192k -c:a aac "${f%.*}.mp4"	
}}

cmd convertmp3 ${{	
	ffmpeg -i $fx -vn -ar 44100 -ac 2 -b:a 320k "${f%.*}.mp3"
}}

# TRASH BIN

cmd trash-empty ${{
	trash-empty --trash-dir ~/.local/share/Trash
}}

cmd trash-restore ${{
	trash-restore
}}


# OPEN FILE IN SPECIFIED APP
cmd open-with-gui &$@ $fx ## opens with a gui application outside lf client
cmd open-with-cli $$@ $fx ## opens with a cli application inside lf client

cmd mimeopen ${{
	for file in "$fx"
	  do
	    mimeopen -d $file
	  done
}}


# BASIC SETTINGS
set hidden false
set ignorecase true
set icons true
set number true
set relativenumber false
set hiddenfiles '*.log:'
set dirfirst true
set hidden false
set history true
set ignorecase true
set mouse false
set preview true
set sortby 'natural'
set info 'size'
set incsearch true
set incfilter true
set icons true
set drawbox true
set ratios '1:2:2'
set period 3
#set cursorpreviewfmt "\033[7;90m"
set cursorpreviewfmt "\033[7m"
set borderfmt "\033[33m"
set ifs "\n"
set timefmt 'Mon 02.01.2006 15:04'
set statfmt "   \033[33m%S\033[0m| \033[36m%p\033[0m| %u| %g| %t| %c| -> %l"
set errorfmt "\033[7;31;47m   "
set rulerfmt "  %a|  %p|  \033[7;35m %s \033[0m|  \033[7;31m %m \033[0m|  \033[7;33m %c \033[0m|  \033[7;34m %f \033[0m| \033[7;97m %d \033[0m|  %i/%t"
set numberfmt "\033[33m"
set infotimefmtnew "15:04|02.01.06"
set infotimefmtold "02.01.06"


# UNBIND KEYS
map gg
map m
map G
map f
map p
map k

# BASIC KEYBINDS
map u unselect
map c copy
map x cut
map v paste
map y cpfilename 
map <enter> open
map <c-r> reload
map <delete> delete
map d trash
map r rename
map R bulk-rename
map Zr undo-bulk-rename
map ":" read
#map ";" find
map / search
map h set hidden!
map u :unselect;clear
map t :toggle;down
map T :unselect;invert
map i invert
map <c-q> quit
map <down> down
map <c-down> half-down
map <up> up
map <c-up> half-up
map <left> updir
map <right> open

# SET RATIO
map "!" :set ratios '1:2:2'; set preview true
map '"' :set ratios '1:4'; set preview true
map "§" :set ratios '1:3'; set preview false

# BOOKMARK KEYBINDS
map "#" mark-load
map md mark-remove
map ms mark-save

# MAKE KEYBINDS
map mf mkfile
map md mkdir

# CHANGE KEYBINDS
map po chown
map pm chmod

# ZIP KEYBINDS
map azu zip
map aze zipe 
map au unarchive

# CONVERT KEYBINDS
map kv1 convertmp4
map ka1 convertmp3

# SORT KEYBINDS
map sn :set sortby 'natural'; set info size; set noreverse
map ss :set sortby 'size'; set info size
map st :set sortby 'time'; set info time; set reverse!
map sc :set sortby 'ctime'; set info ctime
map sa :set sortby 'atime'; set info atime
map sa :set sortby 'ext'; set info size
map sr :set reverse!

# OPEN IN APP KEYBINDS
map og push :open-with-gui<space> ## input application
map oc push :open-with-cli<space> ## input application
map om mimeopen "$f"
map oe $$EDITOR "$f"
map or $$READER "$f"
map ot $$TEXT_EDITOR "$f"
map oiv $$IMAGE_VIEWER "$f"
map oie $$IMAGE_EDITOR "$f"
map ovp $$VIDEO_PLAYER "$f"
map ove $$VIDEO_EDITOR "$f"
map oa $$AUDIO_PLAYER "$f"

# GO TO USER FILES DIRECTORIES KEYBINDS
map gh cd ~/
map gt cd ~/.local/share/Trash/files
map gd cd ~/Downloads
map gD cd ~/Documents
map gf cd ~/Flow
map gg1 cd ~/Git
map gg2 cd ~/Git/hyprland-intergalactic
map gm cd ~/Music
map gms cd ~/MEGAsync
map gi1 cd ~/Pictures
map gi2 cd ~/Pictures/Screenshots
map gp1 cd ~/Projects
map gp2 cd ~/Projects/Fonts
map gs cd ~/Scripts
map gv1 cd ~/Videos
map gv2 cd "~/Videos/After Effects/cafreo"
map gv3 cd "~/Videos/After Effects/P.U.P.P.Y"

# GO TO USER CONFIG DIRECORIES KEYBINDS
map gc1 cd ~/.config
map gc2 cd ~/.config/hypr
map gc6 cd ~/.config/icons
map gc5 cd ~/.config/kitty
map gc4 cd ~/.config/lf
map gc3 cd ~/.config/rofi

# GO TO MOUNTED DIRECTORIES
map Gca cd /mnt/CA-POTRO-EXT-HDD/
map Gcb cd /mnt/CB-POTRO-EXT-HDD/
map Gx cd /mnt/X-POTRO-SSD/
map Gm cd /mnt/
map Gu cd /run/media/cafreo/

# MISC
map ff fzf_jump
map br trash-restore
map be trash-empty
map ps :calcdirsize; set info size; set dircounts false
